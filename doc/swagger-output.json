{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "요기야 관련한 API 명세서를 작성했습니다. 부족한점이나 피드백 내용이 있으면 알려주세요~ <br/> 어떻게 적어야될지 몰라서 여기다 기록할게요 ㅠㅠ <br/> JWT토큰일 발급되면 이 후 모든 AP사용시 headers에 authorization에 'Beare JWT토큰'을 함꼐 보내주기"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http",
    "socket"
  ],
  "paths": {
    "/v1/sign/up": {
      "post": {
        "summary": "회원가입 API",
        "description": "  ** 구글이메일 혹은 간편회원의 가입을 위한 API 입니다. ** <br/><br/>  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "회정 정보",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "회원이메일"
                },
                "password": {
                  "type": "string",
                  "example": "회원비밀번호"
                },
                "nickname": {
                  "type": "string",
                  "example": "닉네임"
                },
                "googleFlag": {
                  "type": "string",
                  "example": "google 회원 유무 : (true/false) bool값으로 주세요"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "회원가입 성공!",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "SUCCESS_SIGN_UP"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "잘못된 접근시",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "VERIFY_EMAIL_FIRST"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/sign/in": {
      "post": {
        "summary": "로그인 API",
        "description": "  ** 로그인 API 입니다. ** <br/><br/>  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "회정 정보",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "회원이메일"
                },
                "password": {
                  "type": "string",
                  "example": "회원비밀번호"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**서버와 통신은 정상이지만 오류가 발생할 수있습니다.**  1. 존재하지 않는 유저일 경우\n  ```  {  \"error\": true,  \"message\": \"not found user info. pleas dublechecking..\"  }  ```\n\n   2.아이디 또는 비밀번호가 올바르지 않은 경우\n  ```  {   \"error\": true,  \"message\": \"비밀번호 또는 이메일이 올바르지 않습니다.\",  }  ```\n\n  ",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "엑세스토큰"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "리프레쉬토큰"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "잘못된 접근시",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/auth/send-code": {
      "post": {
        "summary": "이메일인 인증 코드 전송 API",
        "description": "  ** 유저에게 이메일 인증 코드를 전송하는 api입니다. ** <br/><br/>  Params에 type을 전송해야됩니다.<br/>  1.type = sign_up 일때 -> 회원가입 할떄 사용<br/>  2.type = update_password 일때 -> 비밀번호 변경시 인증코드 전송<br/>  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "유저 이메일 정보",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "전송 받을 이메일"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 서버와 통신된 경우\n\n  retrun 형식은 임시로 정해두겠습니다.  1. 정상적으로 이메일이 보내진 경우\n  ```  error : false,  message : \"SUCCESS\"  ```  "
          },
          "400": {
            "description": "올바르지 않은 이메일 형식을 보낸경우\n\n",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "VALIDATION_ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh-token": {
      "put": {
        "summary": "토큰 재발급 API",
        "description": "  ** 토큰만료시 토큰을 다시 발급해주는 API 입니다. **",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "토큰 정보",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "리프레쉬 토큰"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "일반적으로 accessToken만 재발급하지만 리프래쉬 토큰 만료일이 2주 미만시 함께 재발급해서 전송해줍니다. \n\n  1.리프레쉬 토큰 만료일이 2주 이상일때\n  ```  error:false,  data : {  accessToken : \"재발급 받은 토큰\",  }  ```\n\n   2. 리프레쉬 토큰 만료일이 2주 미만인 경우.\n  ```  error:false,  data:{  accessToken : \"재발급 받은 토큰\",  refreshToken : \"재발급 받은 리프레쉬 토큰\"  }  ```\n\n  "
          }
        }
      }
    },
    "/v1/auth/verify-code": {
      "post": {
        "summary": "인증코드 유효성 검사 API",
        "description": "  ** 전송받은 인증코드가 올바른 인증코드인지 확인하는 API 입니다. ** <br/><br/>  1. 인증코드는 최대 5분까지 사용가능합니다.<br/>  2. 새로운 인증코드를 전송받았다면 이전 인종코드는 사용이 불가능합니다.<br/>  3. 인증코드 입력 횟수는 5회로 제한합니다.  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "인증코드",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "verifyCode": {
                  "type": "string",
                  "example": "인증코드"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 서버와 통신에 성공하였으나 오류가 발생할 수 있습니다.\n\n  1. 성공\n  ```  error:false,  message:\"VERIFY_SECCESS\"  ```\n\n  2. 인증코드 유효시간이 만기된 경우.\n  ```  error: true,  message : \"TO_LATE_CODE\",  ```\n\n  3. 잘못된 인증번호 전송한 경우.\n  ```  error: true,  message : \"WRONG_CODE\",  ```\n\n   4. 최대 입력횟수를 초과한 경우.\n  ```  error: true,  message : \"TOO_MAMY_REQUEST\",  ```\n\n  "
          }
        }
      }
    },
    "/v1/friends/list": {
      "get": {
        "summary": "친구 리스트 불러오기 API",
        "description": "  ** 친구리스트를 전송해주는 API 입니다. **",
        "parameters": [],
        "responses": {
          "200": {
            "description": "친구 리스트를 반환합니다.",
            "schema": {
              "type": "object",
              "properties": {
                "friendList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "친구이메일2"
                      },
                      "nickName": {
                        "type": "string",
                        "example": "닉네임"
                      },
                      "profile": {
                        "type": "string",
                        "example": "URL"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/friends/request-list": {
      "get": {
        "summary": "친구요청대기 리스트 불러오기 API",
        "description": "  ** 친구요청대기 리스트를 전송해주는 API 입니다. **",
        "parameters": [],
        "responses": {
          "200": {
            "description": "친구요청대기 리스트를 반환합니다.",
            "schema": {
              "type": "object",
              "properties": {
                "requestList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "친구이메일2"
                      },
                      "nickName": {
                        "type": "string",
                        "example": "닉네임"
                      },
                      "profile": {
                        "type": "string",
                        "example": "URL"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/friends/request": {
      "post": {
        "summary": "친구 신청 API",
        "description": "  ** 친구 신청을 담당하는 API입니다 **<br/><br/>  1. 친구요청 방법은 링크,QR 코드로 초대 가능합니다.  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "친구 신청 타입",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "유저 이메일"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR/link로 해당 친구를 찾아 정상적인지 아닌지를 반환한다.  1. 정상적인 유저\n  ```  {  error: false,  message : \"SUCCESS\"  }  ```/n/n  2. 존재하지 않는 유저\n  ```  {  error:true,  message :\"존재하지 않는 친구입니다.\"  }  ```  "
          },
          "400": {
            "description": "잘못된 QR 또는 링크 전송시 에러 반한합니다.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 QR 또는 링크입니다. 확인 후 다시 시도바랍니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/my-page/": {
      "get": {
        "summary": "내정보 반환 API --> 내정보를 반환하는 API 필요할지.. 고민돼요..",
        "description": "  ** 내정보를 반환하는 API 입니다. **",
        "parameters": [
          {
            "name": "obj",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "내정보 반환하기",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "nickName": {
                      "type": "string",
                      "example": "짱구"
                    },
                    "profile": {
                      "type": "string",
                      "example": "https://cloudinary.com/xxxxxxx.."
                    },
                    "info": {
                      "type": "string",
                      "example": "필요한거..???"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "잘못된 접근..",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "서버 문제.. ",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "회원 탈퇴 API (테스트)",
        "description": "  ** 회원탈퇴 API 입니다. **",
        "parameters": [
          {
            "name": "obj",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "탈퇴 성공... DB제거",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "잘못된 접근..",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "서버 문제.. ",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/my-page/password": {
      "put": {
        "summary": "비밀번호 변경 API",
        "description": "  ** 내 비밀번호 정보를 변경하는 API 입니다. **",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "discription": "변경할 비밀번호 데이터 전송",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newPasswrod": {
                  "type": "string",
                  "example": "변경할 비밀번호"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 비밀번호 변경 완료",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "잘못된 데이터 전송 또는 접근으로 인한 오류 반환",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "서버 내부의 문제 발생",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "알수없은 문제 발생. 잠시후 다시 실행해주세요."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/my-page/profile": {
      "put": {
        "summary": "프로필 변경 API",
        "description": "  ** 내 프로필 정보를 변경하는 API 입니다. **",
        "parameters": [
          {
            "name": "fieldName : image",
            "in": "formData",
            "description": "변경할 프로필 데이터 전송",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "example": "file 데이터 전송"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 프로필 변경 완료",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "updatedProfileUrl": {
                  "type": "string",
                  "example": "newProfileUrl"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "잘못된 데이터 전송 또는 접근으로 인한 오류 반환,socket 문제 발생시 전송 가능",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "서버 내부의 문제 발생",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "알수없은 문제 발생. 잠시후 다시 실행해주세요."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/my-page/nick-name": {
      "put": {
        "summary": "닉네임 변경 API",
        "description": "  ** 내 닉네임 정보를 변경하는 API 입니다. **",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "변경할 닉네임 데이터 전송",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newNickName": {
                  "type": "string",
                  "example": "철수"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 닉네임 변경 완료",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "잘못된 데이터 전송 또는 접근으로 인한 오류 반환",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "서버 내부의 문제 발생",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "알수없은 문제 발생. 잠시후 다시 실행해주세요."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/socket/login": {
      "get": {
        "summary": "로그인 socket 통신",
        "description": "**socket connection 연결 및 친구리스트를 리턴 받습니다** <br/> flutter endpoint는 미정입니다.  ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "정상적으로 connection 연결시.. 단,fornt에서 endPoint 가 정해지면 가능함",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "friendList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nickName": {
                            "type": "string",
                            "example": "철수"
                          },
                          "email": {
                            "type": "string",
                            "example": "이메일"
                          },
                          "profile": {
                            "type": "string",
                            "example": "URL"
                          },
                          "latitude": {
                            "type": "string",
                            "example": "위도"
                          },
                          "longitude": {
                            "type": "string",
                            "example": "경도"
                          },
                          "battery": {
                            "type": "string",
                            "example": "베터리"
                          },
                          "speed": {
                            "type": "string",
                            "example": "속도"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/socket/log-out": {
      "get": {
        "summary": "로그아웃 API",
        "description": "  ** 로그아웃 api ** <br/>  로그아웃시 강제로 socket connection이 끊김",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "잘못된 데이터 전송 또는 접근으로 인한 오류 반환",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "잘못된 접근입니다."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "서버 내부의 문제 발생",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "알수없은 문제 발생. 잠시후 다시 실행해주세요."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/socket/deleteFriend": {
      "delete": {
        "summary": "친구 삭제 기능",
        "description": "  ** 친구리스트에서 친구 삭제를 담당하는 API입니다 ** <br/>  친구 삭제시 내룸,친구룸 모두 퇴장됩니다.  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "친구 email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "친구 email"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "친구 삭제 완료",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/socket/setRequest": {
      "post": {
        "summary": "요청 대기중인 친구 수락/거절 API",
        "description": "  ** 요청 대기중인 친구를 수락/거절을 결정하는 API입니다 ** <br/>  친구 수락시 나에게 친구 정보를 보내는 endPoint 필요합니다.(미완)  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "친구 email, 수락(true)/거절(false)",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "친구 email"
                },
                "answer": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "  친구 수락시\n  ```  data:{  nickName : '철수',  email : '이메일',  profile : 'URL',  latitude : '위도',  longitude : '경도',  battery : '베터리',  speed : '속도',  }  ```\n\n  거절시\n  ```  data:{  ....음 이부분은 어떻게 보내주는게 편한지 회의해보기  }  ```  "
          }
        }
      }
    },
    "/socket/sendLocation": {
      "put": {
        "summary": "내위치 전송 통신",
        "description": "**내 정보를 전송하고, 내 룸에 있는 친구들에게 브로드케스트 통신을 전송합니다.**  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "discription": "변경할 비밀번호 데이터 전송",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "string",
                      "example": "위도"
                    },
                    "longitude": {
                      "type": "string",
                      "example": "경도"
                    },
                    "battery": {
                      "type": "string",
                      "example": "베터리"
                    },
                    "speed": {
                      "type": "string",
                      "example": "속도"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": " fornt에서 endPoint 가 정해지면 가능함",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "string",
                      "example": "위도"
                    },
                    "longitude": {
                      "type": "string",
                      "example": "경도"
                    },
                    "battery": {
                      "type": "string",
                      "example": "베터리"
                    },
                    "speed": {
                      "type": "string",
                      "example": "속도"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}